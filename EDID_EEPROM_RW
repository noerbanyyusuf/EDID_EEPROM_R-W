#include <Wire.h>
#define EEPROM_I2C_ADDRESS 0x50

uint8_t val[128]={
	0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x04,0x21,0x00,0x00,0x00,0x00,0x00,0x00,
	0x01,0x00,0x01,0x04,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
	0x01,0x00,0x01,0x00,0x01,0x00,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xCE};

uint8_t old[128]={
	0x7F,0xCE,0x26,0x04,0xFF,0xFF,0xFF,0x00,0x00,0x81,0x04,0x00,0x01,0x00,0x00,0x00,
	0x00,0x11,0x01,0x03,0x80,0x0F,0x0A,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
	0x01,0x01,0x01,0x01,0x01,0x01,0x6A,0x11,0x00,0x80,0x40,0x58,0x2D,0x20,0x28,0x30,
	0x00,0x00,0x6C,0x44,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB0
};

uint8_t ori[128]={
	0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x04,0x81,0x04,0x00,0x01,0x00,0x00,0x00,
	0x01,0x11,0x01,0x03,0x80,0x0F,0x0A,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
	0x01,0x01,0x01,0x01,0x01,0x01,0x6A,0x11,0x00,0x80,0x40,0x58,0x2D,0x20,0x28,0x30,
	0xD3,0x00,0x6C,0x44,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB0
};

void setup() {
	Serial.begin(115200);

	Wire.begin();

	Serial.println("Send any key to start reading\n");
	delay(1000);
	while(!Serial.available());

	Serial.println("Begin read eeprom 128bytes\n");
	delay(1000);
	for(int i=0;i<256;i++){
		int value = readEEPROM(i, EEPROM_I2C_ADDRESS);
		Serial.print(value,HEX);
		switch(i){
			case 15:Serial.println();break;
			case 31:Serial.println();break;
			case 47:Serial.println();break;
			case 63:Serial.println();break;
			case 79:Serial.println();break;
			case 95:Serial.println();break;
			case 111:Serial.println();break;
			case 127:Serial.println();break;

			case 143:Serial.println();break;
			case 159:Serial.println();break;
			case 175:Serial.println();break;
			case 191:Serial.println();break;
			case 207:Serial.println();break;
			case 223:Serial.println();break;
			case 239:Serial.println();break;
			case 255:Serial.println();break;

			default:Serial.print("\t");break;
		}
	}

	Serial.println("Send any key start writing\n");
	delay(1000);
	while(!Serial.available());

	Serial.println("Begin write eeprom 128bytes\n");
	delay(1000);
	for(int i=0;i<128;i++){
		writeEEPROM(i,ori[i], EEPROM_I2C_ADDRESS);
		Serial.print(ori[i],HEX);
		switch(i){
			case 15:Serial.println();break;
			case 31:Serial.println();break;
			case 47:Serial.println();break;
			case 63:Serial.println();break;
			case 79:Serial.println();break;
			case 95:Serial.println();break;
			case 111:Serial.println();break;
			case 127:Serial.println();break;
			default:Serial.print("\t");break;
		}
	}

	Serial.println("Finished, please reset to repeat process\n");
	delay(1000);
}

void loop() {

}
